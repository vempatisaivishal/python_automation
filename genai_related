import re

def extract_blood_pressure(text):
    # Define a list of possible blood pressure patterns
    patterns = [
        r"BP:\s*(\d+)/(\d+)",
        r"[Bb][Pp]:\s*(\d+)/(\d+)",
        r"blood\s+pressure:\s*(\d+)/(\d+)",
        r"(\d+)/(\d+)\s+[Mm][Mm][Hh][Gg]",
        r"[Bb][Pp]\s+(\d+)/(\d+)"
    ]

    for pattern in patterns:
        match = re.search(pattern, text)
        if match:
            systolic = match.group(1)
            diastolic = match.group(2)
            return int(systolic), int(diastolic)

    # No match found
    return None, None

# Sample texts
texts = [
    "BP:    120/80",
    "bP: 130/85",
    "Blood pressure: 125/75 mmHg",
    "140/90 mmHg",
    "BP 120/80"
]

for text in texts:
    systolic, diastolic = extract_blood_pressure(text)
    if systolic is not None and diastolic is not None:
        print(f"Systolic: {systolic}, Diastolic: {diastolic}")
    else:
        print("No blood pressure information found.")
###############################################################################################

import gensim.downloader as api
from collections import defaultdict

# Load the pre-trained Word2Vec model
model = api.load("word2vec-google-news-300")

def get_pregnancy_terms():
    # You can load the pregnancy terms from a file, database, or generate them dynamically
    # For this example, we'll use a simple list
    return ["pregnancy", "prenatal", "postpartum", "gestation", "fetus", "placenta"]

def extract_pregnancy_terms(text_file):
    # Read the contents of the text file
    with open(text_file, "r") as f:
        text = f.read()

    # Tokenize the text
    tokens = text.split()

    # Get the pregnancy-related terms
    pregnancy_terms = get_pregnancy_terms()

    # Extract similar terms using Word2Vec
    similar_terms = defaultdict(list)
    for term in pregnancy_terms:
        try:
            similar = model.most_similar(term, topn=5)
            similar_terms[term] = [sim[0] for sim in similar]
        except KeyError:
           
            similar_terms[term] = []

   
    all_pregnancy_terms = set(pregnancy_terms)
    for terms in similar_terms.values():
        all_pregnancy_terms.update(terms)

    return all_pregnancy_terms


pregnancy_terms = extract_pregnancy_terms("document.txt")
print(pregnancy_terms)
